vignette('intro', 'tempdisagg')
# imports
library(tsbox)
library(xts)
library(tempdisagg)
library(tibble)
options(max.print = 200)
# set up wd
path = 'C:\\Users\\joche\\FIM Kernkompetenzzentrum\\Paper Agent-based Modeling - Dokumente\\General\\01 Data\\PVGIS'
setwd(path)
# create hourly ts
hourly_generation = read.csv('hourly_radiation.csv')
time_index_h = seq(from = as.POSIXct("2019-01-01 00:00:00"),
to = as.POSIXct("2019-12-31 23:00:00"), by = "day")
# imports
library(tsbox)
library(xts)
library(tempdisagg)
library(tibble)
options(max.print = 200)
# set up wd
path = 'C:\\Users\\joche\\FIM Kernkompetenzzentrum\\Paper Agent-based Modeling - Dokumente\\General\\01 Data\\PVGIS'
setwd(path)
# create hourly ts
hourly_generation = read.csv('hourly_radiation.csv')
time_index_h = seq(from = as.POSIXct("2019-01-01 00:00:00"),
to = as.POSIXct("2019-12-31 23:00:00"), by = "day")
# yearly data
x_yearly = ts_tbl(ts(c(1076), start = 2019, frequency = 1))
x_yearly
sample(0:100, size = 12)
x_monthly = ts_tbl(ts(sample(0:100, size = 12), start = 2019, frequency = 1))
x_monthly
x_yearly = ts_tbl(ts(c(1076), start = 2019, frequency = 1))
x_monthly = ts_tbl(ts(sample(0:1000, size = 12), start = 2019, frequency = 1))
x_daily = ts_tbl(ts(sample(0:1000, size = 365), start = 2019, frequency = 1))
x_yearly = ts_tbl(ts(c(1076), start = 2019, frequency = 1))
x_monthly = ts_tbl(ts(sample(0:1000, size = 12), start = 2019, frequency = 12))
x_daily = ts_tbl(ts(sample(0:1000, size = 365), start = 2019, frequency = 365))
x_hourly = ts_tbl(ts(sample(0:100, size = 8760), start = 2019, frequency = 8760))
x_yearly = ts_tbl(ts(c(1076), start = 2019, frequency = 1))
x_monthly = ts_tbl(ts(sample(0:1000, size = 12), start = 2019, frequency = 12))
x_daily = ts_tbl(ts(sample(0:1000, size = 365, replace = T), start = 2019, frequency = 365))
x_hourly = ts_tbl(ts(sample(0:100, size = 8760, replace = T), start = 2019, frequency = 8760))
typeof(x_yearly)
install.packages('comprehenr')
library(comprehenr)
to_vec(for(i in c(x_yearly, x_monthly, x_daily, x_hourly) i$time = as.POSIXct(i$time)))
# redefine date format for all series
x_yearly$time = as.POSIXct(x_yearly$time)
x_monthly$time = as.POSIXct(x_monthly$time)
x_daily$time = as.POSIXct(x_daily$time)
x_hourly$time = as.POSIXct(x_hourly$time)
# yearly to monthly
m_y_m = td(x_yearly ~ 0 + x_monthly, method = 'fast', conversion = 'sum')
# yearly to monthly
m_y_m = td(x_yearly ~ 0 + x_monthly, method = 'denton-cholette', conversion = 'sum')
